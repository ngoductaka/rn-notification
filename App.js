/**
 * Sample React Native App
 * https://github.com/facebook/react-native
 *
 * @format
 * @flow strict-local
 */

import React, { useEffect } from 'react';
import type { Node } from 'react';
import {
  Pressable,
  SafeAreaView,
  ScrollView,
  StatusBar,
  StyleSheet,
  Text,
  useColorScheme,
  View,
  Alert,
} from 'react-native';
import PushNotification from 'react-native-push-notification';
import firebase from '@react-native-firebase/app';

import messaging from '@react-native-firebase/messaging';


import {
  Colors,
  DebugInstructions,
  Header,
  LearnMoreLinks,
  ReloadInstructions,
} from 'react-native/Libraries/NewAppScreen';


const App: () => Node = () => {
  const isDarkMode = useColorScheme() === 'dark';


  const backgroundStyle = {
    backgroundColor: isDarkMode ? Colors.darker : Colors.lighter,
  };

  useEffect(() => {
    PushNotification.createChannel({
      channelId: 'dnd',
      channelName: 'dnd',
    })
  }, []);

  useEffect(() => {
    messaging()
      .getToken(firebase.app().options.messagingSenderId)
      .then(x => console.log(x, 'dnd_token'))
      .catch(e => console.log(e, 'dnd_123'));

    const unsubscribe = messaging().onMessage(async remoteMessage => {
      console.log('remoteMessage', remoteMessage);
      const { title, message } = remoteMessage;
      // Alert.alert('A new FCM message arrived!', JSON.stringify(remoteMessage));

      PushNotification.localNotification({
        channelId: "dnd",
        id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
        title,
        message,
      });

      // PushNotification
    });

    return unsubscribe;
  }, []);

  return (
    <SafeAreaView style={backgroundStyle}>
      <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />
      <ScrollView
        contentInsetAdjustmentBehavior="automatic"
        style={backgroundStyle}>
        <Header />
        <View
          style={{
            backgroundColor: isDarkMode ? Colors.black : Colors.white,
          }}>
          <Pressable onPress={() => {
            PushNotification.localNotification({
              channelId: "dnd",
              id: 0, // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
              title: "My Notification Title", // (optional)
              message: "My Notification Message", // (required)
            })
          }}>
            <Text>Push noti</Text>
          </Pressable>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  sectionContainer: {
    marginTop: 32,
    paddingHorizontal: 24,
  },
  sectionTitle: {
    fontSize: 24,
    fontWeight: '600',
  },
  sectionDescription: {
    marginTop: 8,
    fontSize: 18,
    fontWeight: '400',
  },
  highlight: {
    fontWeight: '700',
  },
});

export default App;


const data_ = {
  "channelId": "fcm_fallback_notification_channel",
  "color": null,
  "data": {},
  "foreground": true,
  "id": "-453558192",
  "message": "t6",
  "priority": "high",
  "smallIcon": "ic_notification",
  "sound": null, "tag":
    "campaign_collapse_key_8942699805535805003",
  "title": "t6", "userInteraction": false, "visibility": "private"
}